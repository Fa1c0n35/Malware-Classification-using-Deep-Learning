
import sys
import os

from sklearn.naive_bayes import GaussianNB
import pandas as pd

sys.path.append(os.path.abspath(os.path.join('..')))
import stdfunc


def main():

    df_train = pd.read_csv('../train_dataset.csv')
    df_test = pd.read_csv('../test_dataset.csv')

    X_train, y_train = df_train.iloc[:, 2:], df_train.iloc[:, 0]
    X_test, y_test = df_test.iloc[:, 2:], df_test.iloc[:, 0]
    unique_labels = sorted(y_train.unique().tolist())

    clf = GaussianNB()

    clf.fit(X_train, y_train)

    print("\n\n{}\n".format(clf.score(X_test, y_test)))

    y_predicted = clf.predict(X_test)

    print("Generating confusion matrix figure... \n")
    stdfunc.plot_confusion_matrix(y_test, y_predicted, ml_name='Naive_Bayes',
                                  classes=unique_labels,
                                  title='Confusion matrix for Naive Bayes evaluation')

    print("Generating classification report figure... \n")
    stdfunc.plot_classification_report(y_test, y_predicted, ml_name='Naive_Bayes',
                                  classes=unique_labels,
                                  title='Classification report for Naive Bayes evaluation')


if __name__ == '__main__':
    main()
