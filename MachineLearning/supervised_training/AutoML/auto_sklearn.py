

import os.path
from joblib import dump, load

from sklearn import preprocessing
import autosklearn.classification
from sklearn import metrics
import pandas as pd

def main():

    model_name = 'autosklearn.joblib'

    df_train = pd.read_csv('../train_dataset.csv')
    df_test = pd.read_csv('../test_dataset.csv')

    X_train, y_train = df_train.iloc[:, 2:], df_train.iloc[:, 0]
    X_test, y_test = df_test.iloc[:, 2:], df_test.iloc[:, 0]

    le = preprocessing.LabelEncoder()
    le.fit(y_train)
    y_train = le.transform(y_train)
    y_test = le.transform(y_test) 


    automl = None
    if not os.path.exists(model_name):
        automl = autosklearn.classification.AutoSklearnClassifier(
            resampling_strategy='cv',
            resampling_strategy_arguments={'folds': 5},
        )
        automl.fit(X_train.copy(), y_train.copy())
        automl.refit(X_train.copy(), y_train.copy())
        dump(automl, model_name) 
    else:
        automl = load(model_name) 

    y_hat = automl.predict(X_test)

    print("Accuracy score", metrics.accuracy_score(y_test, y_hat))

    cv_result = pd.DataFrame(automl.cv_results_)
    cv_result.to_csv('auto-sklearn.csv')
    print("\n\n{}\n\n".format(automl.sprint_statistics()))
    print("\n\n{}\n\n".format(automl.show_models()))

if __name__ == '__main__':
    main()